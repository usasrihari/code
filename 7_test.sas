data base ; input practice_id $ npi $ ;cards ;p100 npi1 p100 npi2p100 npi3 p101 npi1p101 npi3p101 npi4p102 npi1p103 npi5;run ;proc print;run;proc sort ; by npi ;run ;proc transpose data=base out=base_tran(drop=_name_) prefix = practice_ ; by npi ; var practice_id ;run ;proc print;run;proc sql noprint; create table base_tran_merg as select a.*,   b.* from base a  left join  base_tran b on a.npi = b.npi order by a.practice_id, a.npi;quit ;proc print;run;proc transpose data = base_tran_merg out = base_tran_merg_tran2(drop=_name_) prefix = overlap_practice; by practice_id npi ; var practice_1 practice_2 practice_3 ;run ;data base_tran_merg_tran2 ; set base_tran_merg_tran2 ; where not missing(overlap_practice1) ; if practice_id ne overlap_practice1 ;run ;proc sort data = base_tran_merg_tran2 ; by practice_id overlap_practice1 ;run ;proc print;run ;data base_tran_merg_tran2 ; set base_tran_merg_tran2 ; by practice_id overlap_practice1 ;  if first.practice_id then count = 0 ;  if first.overlap_practice1 then count = 0 ; count + 1 ; if last.overlap_practice1 ;run ;proc print;run ; proc transpose data = base_tran_merg_tran2 out = base_tran_merg_tran3(drop=_name_) ; by practice_id ; var count  ; id  overlap_practice1 ;run ;proc print;run;proc sql noprint ; create table _final as select a.*,   b.* from (select practice_id, count(*) as denom   from base   group by practice_id) a  left join  base_tran_merg_tran3 b on a.practice_id = b.practice_id;quit ;proc print;run;
